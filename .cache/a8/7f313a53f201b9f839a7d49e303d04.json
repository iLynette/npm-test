{"id":"node_modules/date-fns/esm/clamp/index.js","dependencies":[{"name":"/Applications/sheCodes/npm-test/package.json","includedInParent":true,"mtime":1644766730452},{"name":"/Applications/sheCodes/npm-test/node_modules/date-fns/esm/clamp/package.json","includedInParent":true,"mtime":1644766724324},{"name":"../max/index.js","loc":{"line":1,"column":16,"index":16},"parent":"/Applications/sheCodes/npm-test/node_modules/date-fns/esm/clamp/index.js","resolved":"/Applications/sheCodes/npm-test/node_modules/date-fns/esm/max/index.js"},{"name":"../min/index.js","loc":{"line":2,"column":16,"index":51},"parent":"/Applications/sheCodes/npm-test/node_modules/date-fns/esm/clamp/index.js","resolved":"/Applications/sheCodes/npm-test/node_modules/date-fns/esm/min/index.js"},{"name":"../_lib/requiredArgs/index.js","loc":{"line":3,"column":25,"index":95},"parent":"/Applications/sheCodes/npm-test/node_modules/date-fns/esm/clamp/index.js","resolved":"/Applications/sheCodes/npm-test/node_modules/date-fns/esm/_lib/requiredArgs/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = clamp;\n\nvar _index = _interopRequireDefault(require(\"../max/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../min/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name clamp\n * @category Interval Helpers\n * @summary Return a date bounded by the start and the end of the given interval\n *\n * @description\n * Clamps a date to the lower bound with the start of the interval and the upper\n * bound with the end of the interval.\n *\n * - When the date is less than the start of the interval, the start is returned.\n * - When the date is greater than the end of the interval, the end is returned.\n * - Otherwise the date is returned.\n *\n * @example\n * // What is Mar, 21, 2021 bounded to an interval starting at Mar, 22, 2021 and ending at Apr, 01, 2021\n * const result = clamp(new Date(2021, 2, 21), {\n *   start: new Date(2021, 2, 22),\n *   end: new Date(2021, 3, 1),\n * })\n * //=> Mon Mar 22 2021 00:00:00\n *\n * @param {Date | Number} date - the date to be bounded\n * @param {Interval} interval - the interval to bound to\n * @returns {Date} the date bounded by the start and the end of the interval\n * @throws {TypeError} 2 arguments required\n */\nfunction clamp(date, _ref) {\n  var start = _ref.start,\n      end = _ref.end;\n  (0, _index3.default)(2, arguments);\n  return (0, _index2.default)([(0, _index.default)([date, start]), end]);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":4,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":5,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":6,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":7,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":8,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":9,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":10,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":11,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":12,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":14,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":15,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":16,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":17,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":18,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":19,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":20,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":21,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":22,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":23,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":24,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":25,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":26,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":27,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":28,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":29,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":31,"column":15}},{"name":"clamp","generated":{"line":42,"column":9},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":31,"column":24}},{"generated":{"line":42,"column":14},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":31,"column":15}},{"name":"date","generated":{"line":42,"column":15},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":31,"column":30}},{"generated":{"line":42,"column":19},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":31,"column":15}},{"name":"_ref","generated":{"line":42,"column":21},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":31,"column":36}},{"generated":{"line":42,"column":25},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":31,"column":15}},{"generated":{"line":42,"column":27},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":31,"column":42}},{"generated":{"line":43,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":32,"column":2}},{"name":"start","generated":{"line":43,"column":6},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":32,"column":6}},{"generated":{"line":43,"column":11},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":32,"column":11}},{"name":"_ref","generated":{"line":43,"column":14},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":32,"column":14}},{"generated":{"line":43,"column":18},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":32,"column":18}},{"name":"start","generated":{"line":43,"column":19},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":32,"column":19}},{"generated":{"line":43,"column":24},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":32,"column":2}},{"generated":{"line":44,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":32,"column":2}},{"name":"end","generated":{"line":44,"column":6},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":33,"column":6}},{"generated":{"line":44,"column":9},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":33,"column":9}},{"name":"_ref","generated":{"line":44,"column":12},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":33,"column":12}},{"generated":{"line":44,"column":16},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":33,"column":16}},{"name":"end","generated":{"line":44,"column":17},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":33,"column":17}},{"generated":{"line":44,"column":20},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":32,"column":2}},{"generated":{"line":45,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":34,"column":2}},{"generated":{"line":45,"column":23},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":34,"column":15}},{"generated":{"line":45,"column":24},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":34,"column":2}},{"name":"arguments","generated":{"line":45,"column":26},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":34,"column":18}},{"generated":{"line":45,"column":35},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":34,"column":2}},{"generated":{"line":46,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":35,"column":2}},{"generated":{"line":46,"column":9},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":35,"column":9}},{"generated":{"line":46,"column":30},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":35,"column":13}},{"generated":{"line":46,"column":31},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":35,"column":14}},{"generated":{"line":46,"column":51},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":35,"column":18}},{"name":"date","generated":{"line":46,"column":52},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":35,"column":19}},{"generated":{"line":46,"column":56},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":35,"column":18}},{"name":"start","generated":{"line":46,"column":58},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":35,"column":25}},{"generated":{"line":46,"column":63},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":35,"column":18}},{"generated":{"line":46,"column":64},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":35,"column":14}},{"generated":{"line":46,"column":65},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":35,"column":13}},{"name":"end","generated":{"line":46,"column":67},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":35,"column":34}},{"generated":{"line":46,"column":70},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":35,"column":13}},{"generated":{"line":46,"column":71},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":35,"column":9}},{"generated":{"line":46,"column":72},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":35,"column":2}},{"generated":{"line":47,"column":0},"source":"node_modules/date-fns/esm/clamp/index.js","original":{"line":36,"column":1}}],"sources":{"node_modules/date-fns/esm/clamp/index.js":"import max from \"../max/index.js\";\nimport min from \"../min/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name clamp\n * @category Interval Helpers\n * @summary Return a date bounded by the start and the end of the given interval\n *\n * @description\n * Clamps a date to the lower bound with the start of the interval and the upper\n * bound with the end of the interval.\n *\n * - When the date is less than the start of the interval, the start is returned.\n * - When the date is greater than the end of the interval, the end is returned.\n * - Otherwise the date is returned.\n *\n * @example\n * // What is Mar, 21, 2021 bounded to an interval starting at Mar, 22, 2021 and ending at Apr, 01, 2021\n * const result = clamp(new Date(2021, 2, 21), {\n *   start: new Date(2021, 2, 22),\n *   end: new Date(2021, 3, 1),\n * })\n * //=> Mon Mar 22 2021 00:00:00\n *\n * @param {Date | Number} date - the date to be bounded\n * @param {Interval} interval - the interval to bound to\n * @returns {Date} the date bounded by the start and the end of the interval\n * @throws {TypeError} 2 arguments required\n */\n\nexport default function clamp(date, _ref) {\n  var start = _ref.start,\n      end = _ref.end;\n  requiredArgs(2, arguments);\n  return min([max([date, start]), end]);\n}"},"lineCount":null}},"error":null,"hash":"8691f5e04e53edb3f7a45cd5f477e3c7","cacheData":{"env":{}}}